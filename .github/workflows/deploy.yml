name: Build and Deploy Personal Website

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.repository_owner }}/personal-website
          tags: |
            type=raw,value=latest
            type=sha

      - uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Write SSH key
        shell: bash
        run: |
          set -euo pipefail
          install -m 700 -d /home/runner/.ssh
          printf '%s\n' "${{ secrets.SERVER_SSH_KEY }}" > /home/runner/.ssh/ci_hetzner
          chmod 600 /home/runner/.ssh/ci_hetzner
          ls -l /home/runner/.ssh
          test -s /home/runner/.ssh/ci_hetzner

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key_path: /home/runner/.ssh/ci_hetzner
          script: |
            set -euo pipefail
            # Create personal website directory if it doesn't exist
            sudo mkdir -p /opt/personal-website
            sudo chown $USER:$USER /opt/personal-website
            
            # Copy production docker-compose file
            cd /opt/personal-website
            cat > docker-compose.yml << 'EOF'
            services:
              personal-website:
                image: ghcr.io/johnkareoke/personal-website:latest
                ports:
                  - "127.0.0.1:8000:5001"
                volumes:
                  - ./posts:/app/posts
                  - ./static:/app/static
                environment:
                  - FLASK_DEBUG=0
                restart: unless-stopped
                healthcheck:
                  test: ["CMD", "curl", "-f", "http://localhost:8000/api/posts"]
                  interval: 30s
                  timeout: 10s
                  retries: 3
                  start_period: 40s
            EOF
            
            # Pull and start the personal website service
            docker compose pull
            docker compose up -d
            docker image prune -f
    
            cd /opt/apps
            docker compose pull personal-website
            docker compose up -d personal-website
            docker image prune -f